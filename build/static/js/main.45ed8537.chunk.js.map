{"version":3,"sources":["store/reducer.js","store/actionCreators.js","store/actionTypes.js","store/sagas.js","store/index.js","TodoList.js","TodoListUI.js","index.js"],"names":["defaultState","inputValue","list","defaultListData","initListAction","data","type","getInitList","mySaga","action","put","takeEvery","sagaMiddleware","createSagaMiddleware","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","state","newState","JSON","parse","stringify","value","push","splice","index","run","todoSagas","TodoList","Input","Search","props","resetHandle","searchBar","input","getState","handleInputChange","bind","handleStoreChange","handleBtnClick","subscribe","dispatch","text","event","e","target","this","setState","Component","ReactDOM","render","document","getElementById"],"mappings":"gRAEMA,EAAe,CACnBC,WAAY,GACZC,KAAM,I,yBCFKC,EAAkB,CAC7B,uDAmBWC,EAAiB,SAACC,GAAD,MAAW,CACvCC,KCnB8B,mBDoB9BD,S,WEjBQE,G,WAMAC,GANV,SAAUD,IAAV,uEAEE,OADME,EAASL,EAAeD,GADhC,SAEQO,YAAID,GAFZ,uCAMA,SAAUD,IAAV,iEACE,OADF,SACQG,YDTqB,gBCSIJ,GADjC,uCAIeC,QCXTI,EAAiBC,cAIjBC,GADmBC,OAAOC,qCAAuCD,OAAOC,qCAAqC,IAAMC,KAEvHC,YAAgBN,IAGZO,EAAQC,aJHC,WAAmC,IAAlCC,EAAiC,uDAAzBrB,EAAcS,EAAW,uCAE/C,GEZgC,uBFY5BA,EAAOH,KAA6B,CACtC,IAAMgB,EAAWC,KAAKC,MAAMD,KAAKE,UAAUJ,IAE3C,OADAC,EAASrB,WAAaQ,EAAOiB,MACtBJ,EAGT,GEjB2B,kBFiBvBb,EAAOH,KAAuB,CAChC,IAAMgB,EAAWC,KAAKC,MAAMD,KAAKE,UAAUJ,IAC3C,MAAqB,KAAjBZ,EAAOiB,QACXJ,EAASpB,KAAKyB,KAAKlB,EAAOiB,OAC1BJ,EAASrB,WAAa,IAFWqB,EAOnC,GEzB8B,qBFyB1Bb,EAAOH,KAA0B,CACnC,IAAMgB,EAAWC,KAAKC,MAAMD,KAAKE,UAAUJ,IAE3C,OADAC,EAASpB,KAAK0B,OAAOnB,EAAOoB,MAAO,GAC5BP,EAIT,GE/B8B,qBF+B1Bb,EAAOH,KAA0B,CACnC,IAAMgB,EAAWC,KAAKC,MAAMD,KAAKE,UAAUJ,IAE3C,OADAC,EAASpB,KAAOO,EAAOJ,KAChBiB,EAET,OAAOD,IIxBPP,GAIFF,EAAekB,IAAIC,GAEJZ,Q,SC6DAa,G,qBChFIC,IAAXC,O,kDDWN,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAqBRC,YAAc,WACZ,EAAKC,UAAUC,MAAMjB,MAAMK,MAAM,IArBjC,EAAKL,MAAQF,EAAMoB,WACnB,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBACzB,EAAKC,kBAAoB,EAAKA,kBAAkBD,KAAvB,gBACzB,EAAKE,eAAiB,EAAKA,eAAeF,KAApB,gBACtBtB,EAAMyB,UAAU,EAAKF,mBANJ,E,kGA4BjB,IAAMjC,EJRwB,CAChCH,KC9B2B,iBGsCzBa,EAAM0B,SAASpC,K,uCAIAoB,GAKf,IAAMpB,EJnCqC,CAC7CH,KCf8B,mBDgB9BoB,MIiCqCG,GACnCV,EAAM0B,SAASpC,K,qCAIFqC,EAAMC,GAInB,IAAMtC,EJlDkC,CAC1CH,KCV2B,gBDW3BoB,MIgDkCoB,GAChC3B,EAAM0B,SAASpC,K,wCAICuC,GAMhB,IAAMvC,EJlEsC,CAC9CH,KCNgC,qBDOhCoB,MIgEsCsB,EAAEC,OAAOvB,OAC7CP,EAAM0B,SAASpC,K,0CAMfyC,KAAKC,SAAShC,EAAMoB,gB,GAnEDa,cERvBC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.45ed8537.chunk.js","sourcesContent":["import {CHANGE_INPUT_VALUE, ADD_TODO_ITEM, DELETE_TODO_ITEM, INIT_LIST_ACTION} from './actionTypes'\n\nconst defaultState = {\n  inputValue: '',\n  list: []\n};\n\n\n// state    整个DOM的数据库\n// action\n// reducer 可以接收state，但是不可以在修改state\nexport default (state = defaultState, action) => {\n\n  if (action.type === CHANGE_INPUT_VALUE) {\n    const newState = JSON.parse(JSON.stringify(state)); //深拷贝\n    newState.inputValue = action.value;\n    return newState // 返回数据， 固定写法\n  }\n\n  if (action.type === ADD_TODO_ITEM){\n    const newState = JSON.parse(JSON.stringify(state));\n    if (action.value === \"\") {return newState}\n    newState.list.push(action.value);\n    newState.inputValue = '';\n    return newState;\n  }\n\n  // 删除list的数据使用的是 splice\n  if (action.type === DELETE_TODO_ITEM){\n    const newState = JSON.parse(JSON.stringify(state));\n    newState.list.splice(action.index, 1);\n    return newState;\n  }\n\n  // redux ajax\n  if (action.type === INIT_LIST_ACTION){\n    const newState = JSON.parse(JSON.stringify(state));\n    newState.list = action.data;\n    return newState;\n  }\n  return state;\n}","import {CHANGE_INPUT_VALUE, ADD_TODO_ITEM, DELETE_TODO_ITEM, INIT_LIST_ACTION, GET_INIT_LIST} from './actionTypes'\n\nexport const defaultListData = [\n  '明天11点开小组会议.',\n];\n\nexport const getInputChangeAction = (value) => ({\n  type: CHANGE_INPUT_VALUE,\n  value\n});\n\nexport const getAddItemAction = (value) => ({\n  type: ADD_TODO_ITEM,\n  value\n});\n\n\nexport const getDeleteItemAction = (value) => ({\n  type: DELETE_TODO_ITEM,\n  value\n});\n\nexport const initListAction = (data) => ({\n  type: INIT_LIST_ACTION,\n  data\n});\n\nexport const getTodoList = () => {\n  return (dispatch) => {\n    const action = initListAction(defaultListData);\n    dispatch(action);\n  }\n};\n\nexport const getInitList = () => ({\n  type: GET_INIT_LIST,\n});","\nexport const CHANGE_INPUT_VALUE = 'change_input_value';\nexport const ADD_TODO_ITEM = 'add_todo_item';\nexport const DELETE_TODO_ITEM = 'delete_todo_item';\nexport const INIT_LIST_ACTION = 'init_list_action';\nexport const GET_INIT_LIST = 'get_init_list';","import {takeEvery, put} from 'redux-saga/effects'\nimport {defaultListData} from './actionCreators'\n// import axios from 'axios'\n\nimport {initListAction} from './actionCreators'\nimport {GET_INIT_LIST} from \"./actionTypes\";\n\nfunction* getInitList() {\n  const action = initListAction(defaultListData);\n  yield put(action);\n}\n\n// generator 函数\nfunction* mySaga() {\n  yield takeEvery(GET_INIT_LIST, getInitList)\n}\n\nexport default mySaga;","import {createStore, applyMiddleware, compose} from 'redux';\nimport createSagaMiddleware from 'redux-saga'\n\nimport reducer from \"./reducer\";\nimport todoSagas from './sagas'\n\nconst sagaMiddleware = createSagaMiddleware();\n\n// https://github.com/zalmoxisus/redux-devtools-extension/#12-advanced-store-setup\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\nconst enhancer = composeEnhancers(\n  applyMiddleware(sagaMiddleware)\n);\n\nconst store = createStore(\n  reducer,\n  enhancer // redux 中间件\n);\n\n// then run the saga\nsagaMiddleware.run(todoSagas);\n\nexport default store;","import React, {Component} from 'react';\n// import axios from 'axios'\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\nimport store from \"./store\"; // default index.js\nimport {\n  getAddItemAction,\n  getDeleteItemAction,\n  getInputChangeAction,\n  getInitList,\n} from './store/actionCreators'\nimport TodolistUI from './TodoListUI'\n\nclass TodoList extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = store.getState();\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleStoreChange = this.handleStoreChange.bind(this);\n    this.handleBtnClick = this.handleBtnClick.bind(this);\n    store.subscribe(this.handleStoreChange) // 订阅更新， 数据发生变化就调用这个函数\n  }\n\n  render() {\n    return (\n      // UI组件\n      <TodolistUI\n        inputValue={this.state.inputValue}\n        list={this.state.list}\n        handleInputChange={this.handleInputChange}\n        handleBtnClick={this.handleBtnClick}\n        handleItemDelete={this.handleItemDelete}\n      />\n      )\n  }\n  //重置处理\n  resetHandle = () => {\n    this.searchBar.input.state.value='';\n  };\n\n  // 生命周期函数\n  componentDidMount() {\n    const action = getInitList();\n    store.dispatch(action)\n  }\n\n  // delete item\n  handleItemDelete(index){\n    // const action = {\n    //   type: DELETE_TODO_ITEM,\n    //   index\n    // };\n    const action = getDeleteItemAction(index);\n    store.dispatch(action);\n  }\n\n  // btn click\n  handleBtnClick(text, event) {\n    // const  action = {\n    //   type: ADD_TODO_ITEM,\n    // };\n    const action = getAddItemAction(text);\n    store.dispatch(action);\n  }\n\n  // input change\n  handleInputChange(e){\n    // action\n    // const action = {\n    //   type:CHANGE_INPUT_VALUE,\n    //   value: e.target.value,\n    // };\n    const action = getInputChangeAction(e.target.value);\n    store.dispatch(action)\n  }\n\n  // page load data\n  // store 数据发生变化\n  handleStoreChange(){\n    this.setState(store.getState()); // sync data\n  }\n}\n\nexport default TodoList","import React from \"react\";\nimport {Input, List, Row, Col} from \"antd\";\n\nconst { Search } = Input;\n\n// 无状态组件\nconst TodoListUI = (props) => {\n  return (\n    <div style={{marginTop: '20px', marginLeft: '10px'}}>\n      <div>\n        <Row>\n          <Col span={12} offset={6}>\n\n            <Search\n              placeholder=\"todo info\"\n              enterButton=\"Search\"\n              size=\"large\"\n              value={props.inputValue}\n              onChange={props.handleInputChange}\n              onSearch={(value,event) => props.handleBtnClick(value, event)}\n            />\n          </Col>\n        </Row>\n\n      </div>\n      <Row>\n        <Col span={12} offset={6}>\n          <List\n            style={{marginTop: '10px'}}\n            bordered\n            dataSource={props.list}\n            renderItem={(item, index) => (\n              <List.Item onClick={\n                () => {\n                  props.handleItemDelete(index)\n                }\n              }>{item}\n              </List.Item>)}\n          />\n        </Col>\n      </Row>\n\n    </div>\n  )\n};\n\nexport default TodoListUI\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TodoList from './TodoList';\n\nReactDOM.render(\n    <TodoList />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}